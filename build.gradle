buildscript {
    dependencies {
        classpath  'org.postgresql:postgresql:42.2.1'
    }
}

plugins {
    id 'org.liquibase.gradle' version '1.2.4'
    id 'com.github.jacobono.jaxb' version '1.3.5'
}

apply plugin: 'java'
apply plugin: 'application'

if (file('database.gradle').exists()) {
   apply from:'database.gradle'
}

version = '1.8.1'

mainClassName = 'asl.seedscan.SeedScan'
applicationDefaultJvmArgs = ["-Xms64m", "-Xmx30g"]

repositories {
    mavenCentral()
}

dependencies {
        compile project(':asl-java-utils')

        compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
        compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.+'
        compile group: 'org.jfree', name: 'jfreechart', version: '1.0.+'
        compile group: 'org.apache.commons', name: 'commons-math3', version: '3.+'
        compile group: 'org.postgresql', name: 'postgresql', version: '42.2.1'
        compile group: 'com.mchange', name: 'c3p0', version: '0.9.5.2'
        compile 'edu.sc.seis:seedCodec:1.0.11'
        compile ('edu.sc.seis:TauP:2.4.1') {
            exclude group: 'org.slf4j'
        }
       // compile files('lib/TauP-2.1.0.jar')

        testCompile group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
        testCompile group: 'junit', name: 'junit', version: '4.+'

        jaxb 'com.sun.xml.bind:jaxb-xjc:2.2.7-b41'
        jaxb 'com.sun.xml.bind:jaxb-impl:2.2.7-b41'
        jaxb 'javax.xml.bind:jaxb-api:2.2.7'
}

jaxb {
    xsdDir = "src/main/resources/schemas"
        xjc {
            destinationDir = 'src/main/java'
                removeOldOutput = 'yes'
        }
}

jar {
    /* Adds all dependent libraries*/
    from {
        configurations.compile.collect {
            it.isDirectory() ? it : zipTree(it)
        }
        configurations.runtime.collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    manifest {
        attributes 'Implementation-Title': 'ASL SeedScan Data Quality Analyzer',
                   'Implementation-Version': version,
                   'Main-Class': mainClassName
    }
}

test {
    maxHeapSize = "4096m"
    maxParallelForks = 4;
    testLogging {
        events "skipped", "failed"
        afterSuite { desc, result ->
            if (!desc.parent) {
                println "Result: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            }
        }
    }
}

/*Turn off doclint since it is far too strict and breaks the javadoc everytime*/
if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

javadoc {
    options.memberLevel = JavadocMemberLevel.PRIVATE
}

compileJava {
    options.incremental = true
}

tasks.compileJava.dependsOn('xjc')

if (file('database.gradle').exists()) {
    liquibase {
        activities {
            main {
                changeLogFile "src/main/resources/asl/seedscan/database/changelog/db.changelog-master.xml"
                url project.ext.mainUrl
                username project.ext.mainUsername
                password project.ext.mainPassword
            }
        }
        runList = "main"
    }
}

task gitSubmodule(type: Exec) {
    description 'Update git submodules'
    println 'Downloading the test data submodule may take a long time, potentially hours depending on your connection speed.'
    println 'Interrupting may corrupt the test data submodule.'
    commandLine 'git', 'submodule', 'update', '--init', '--recursive'
}

compileJava.dependsOn(gitSubmodule)
build.dependsOn gitSubmodule
